package com.phonepe.platform.bonsai.core;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.collect.Lists;
import com.jayway.jsonpath.JsonPath;
import com.phonepe.platform.bonsai.core.core.AdjacencyBonsai;
import com.phonepe.platform.bonsai.core.core.Context;
import com.phonepe.platform.bonsai.core.core.Edge;
import com.phonepe.platform.bonsai.core.core.JsonPathSetup;
import com.phonepe.platform.bonsai.core.data.MultiKnotData;
import com.phonepe.platform.bonsai.core.structures.OrderedList;

import java.util.Comparator;
import java.util.Map;
import java.util.PriorityQueue;

/**
 * @author tushar.naik
 * @version 1.0  27/07/18 - 12:19 AM
 */
public class Main {

    public static void main(String[] args) {

        JsonPathSetup.setup();

        ObjectMapper mapper = new ObjectMapper();

        PriorityQueue<Edge> edges = new PriorityQueue<>(Comparator.comparingInt(Edge::getPriority));
        edges.add(Edge.builder().id("A4").priority(4).build());
        edges.add(Edge.builder().id("A5").priority(5).build());
        edges.add(Edge.builder().id("A3").priority(3).build());
        edges.add(Edge.builder().id("A1").priority(1).build());
        edges.add(Edge.builder().id("A6").priority(6).build());
        edges.add(Edge.builder().id("A2").priority(2).build());
        edges.forEach(System.out::println);

        System.out.println("----=========================----");
        OrderedList<Edge> orderedList = new OrderedList<>();
        orderedList.addAll(Lists.newArrayList(Edge.builder().id("A4").priority(4).build(),
                                              Edge.builder().id("A1").priority(1).build(),
                                              Edge.builder().id("A3").priority(3).build(),
                                              Edge.builder().id("A2").priority(2).build(),
                                              Edge.builder().id("A5").priority(5).build(),
                                              Edge.builder().id("A6").priority(6).build()));

        orderedList.forEach(System.out::println);


        Bonsai bonsai = new AdjacencyBonsai();
        bonsai.add("page1", MultiKnotData.builder().key("wid1").key("wid2").key("wid3").build());
        bonsai.evaluate("page1", Context.builder().documentContext(
                JsonPath.parse(mapper.convertValue("{\n" +
                                                           "\"userType\": \"PERSON\",\n" +
                                                           "\"userId\": \"U1803141602190674528957\",\n" +
                                                           "\"name\": \"Tushar Naik\",\n" +
                                                           "\"phoneNumber\": \"9449716665\",\n" +
                                                           "\"deviceFingerprint\": \"340b62fe-8d61-4064-8128-17397b636f2cdW5pdmVyc2FsODg5NQ-c2Ftc3VuZ2V4eW5vczg4OTU-\",\n" +
                                                           "\"primaryVpa\": \"9449716665\",\n" +
                                                           "\"language\": \"en\",\n" +
                                                           "\"vpas\": [\n" +
                                                           "\"u1803141602190674528957\",\n" +
                                                           "\"9449716665\"\n" +
                                                           "],\n" +
                                                           "\"vpaDetails\": [\n" +
                                                           "{\n" +
                                                           "\"vpa\": \"u1803141602190674528957\",\n" +
                                                           "\"autoGenerated\": true,\n" +
                                                           "\"expired\": false,\n" +
                                                           "\"active\": true,\n" +
                                                           "\"primary\": false,\n" +
                                                           "\"userType\": \"PERSON\",\n" +
                                                           "\"vpaType\": \"NORMAL\",\n" +
                                                           "\"createdAt\": 1521023539094\n" +
                                                           "},\n" +
                                                           "{\n" +
                                                           "\"vpa\": \"9449716665\",\n" +
                                                           "\"autoGenerated\": false,\n" +
                                                           "\"expired\": false,\n" +
                                                           "\"active\": true,\n" +
                                                           "\"primary\": true,\n" +
                                                           "\"userType\": \"PERSON\",\n" +
                                                           "\"vpaType\": \"NORMAL\",\n" +
                                                           "\"createdAt\": 1521703023692\n" +
                                                           "}\n" +
                                                           "],\n" +
                                                           "\"addresses\": [],\n" +
                                                           "\"emails\": [\n" +
                                                           "{\n" +
                                                           "\"email\": \"tushar.knaik@gmail.com\",\n" +
                                                           "\"active\": true,\n" +
                                                           "\"verified\": true\n" +
                                                           "}\n" +
                                                           "],\n" +
                                                           "\"blacklisted\": false,\n" +
                                                           "\"blacklistReason\": null,\n" +
                                                           "\"registeredSimId\": \"bc43bc23aa31b31fc2b09e9c617d331687ee57ef71e4c45722b3fcbfc7d4b180\"\n" +
                                                           "}", Map.class))).build());

    }
}
